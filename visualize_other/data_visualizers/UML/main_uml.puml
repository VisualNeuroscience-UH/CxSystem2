@startuml

note "called by neuron_group()" as N1
note "called by synapse()" as N2
note "called by relay()" as N3

package "CxSystem module"{
class CxSystem {
customized_neurons_list[]
customized_synapses_list[]
.. Setters ..
set_total_synapses()
set_sys_mode()
....
void neuron_group()
void monitors()
void synapse()
_Synapses_Optimizer()
void relay()
gather_result()
}
}

package "brian2_obj_definitions module"{
class neuron_reference{
output_neuron{}
void PC()
void BC()
void L1i()
void MC()
void SS()
}

class customized_synapses{
output_synapse{}
void STDP()
void Fixed()
}

neuron_reference <- N1
N1 -CxSystem
customized_synapses <- N2
N2-CxSystem
}

package "brian2_obj_namespaces module" {
class "synapses_namespaces"{
.. Class Variables ..
_weights{}
cw{}
sp{}
stdp{}
dist{}
.. Instance Variables ..
output_namespace{}
....
void STDP()
void Fixed()
}
class "neurons_namespaces"{

output_namespace{}
void _PC()
void _BC()
void _L1i()
void _MC()
void _SS()
}
neurons_namespaces<-neuron_reference
synapses_namespaces<-customized_synapses
}

package "save_data module"{
class save_data {
data{}
syntax_bank[]
void create_key()
void save_to_file()
}
CxSystem->save_data
}

package "stimuli module" {
class stimuli {
SimulationDuration
indices[]
times[]
generate_inputs()
load_input_seq()
VCxsave_input_sequence()
}
CxSystem->N3
N3->stimuli
}

interface configuration_file
configuration_file->CxSystem

@enduml